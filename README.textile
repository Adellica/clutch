h1. Clutch

<pre>
  (ns clutch
    (:use com.ashafa.clutch))

  (def clutch-test-database
    (create-database {:name     "clutch_test_db"
                      :language "clojure"}))     ; use Clutch (Clojure) view server with database

  (def remote-database 
    (create-database {:name "clutch_test_db"
                      :host "10.1.192.23"}))     ; remote CouchDB server
                      
  (with-db clutch-test-database
           ;; insert or update multiple documents
           (bulk-update [{:test-grade 10}
                         {:test-grade 20}
                         {:test-grade 30}])
           ;; create temporary or permanent views using clojure 
           (ad-hoc-view
             (with-clj-view-server
                (fn [doc] [nil (:test-grade doc)])       ; map
                (fn [keys values _] (apply + values))))) ; reduce

  (replicate-database clutch-test-database remote-database) ; replicate `cluth-test-database' to remote server
</pre>

Clutch is a "Clojure":http://clojure.org library for "Apache CouchDB":http://couchdb.apache.org/. Although it's in a very early stage of development (Clutch API subject to change), Clutch supports most of the basic Apache CouchDB APIs. To get a sense of where Clutch is at, please view the included tests. 

h2. Clutch (Clojure) View Server

In order to use Clojure for views, you must add the following to the 'local.ini' file of your Apache CouchDB installation (replacing &lt;path to...&gt; with the appropiate paths).

<pre>
  [query_servers]
  clojure = java -cp <path to clojure.jar>/clojure.jar:<path to clojure-contrib.jar or clojure-contrib source>/clojure-contrib(.jar|/src) clojure.main <path to clutch project folder>/clutch/src/com/ashafa/clutch/view_server.clj
</pre>

h2. Dependencies

Clutch requires:

* "Apache CouchDB":http://couchdb.apache.org/ (version 0.10.0 +)
* "Clojure":http://clojure.org (version 1.0)
* "clojure-contrib":http://code.google.com/p/clojure-contrib/

h3. TODOs

* Documentation!
* Use streams instead of java.io.File for attachments apis
* Revisions
* More robust tests